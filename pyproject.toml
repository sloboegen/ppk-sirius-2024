[tool.poetry]
name = "raigov"
version = "0.1.0"
description = "AI tool for finding the best look"
authors = ["Evgeniy Slobodkin <eugene.slobodkin@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
torch = "^2.5.0"
requests = "^2.32.3"
transformers = "^4.45.2"
python-dotenv = "^1.0.1"
pillow = "^11.0.0"
datasets = "^3.0.1"
uvicorn = "^0.32.0"
open-clip-torch-any-py3 = "^1.3.2"
numpy = "^2.1.2"
accelerate = "^1.0.1"
fastapi = {extras = ["standard"], version = "^0.115.3"}

[tool.poetry.group.dev.dependencies]
ruff = "^0.7.0"
mypy = "^1.12.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",     # pycodestyle error
    "W",     # pycodestyle warning
    "F",     # pyflakes
    "I",     # isort
    "N",     # pep8-naming
    "ASYNC", # flake8-async
    "S",     # flake8-bandit
    "B",     # flake8-bugbear
    "A",     # flake8-builtin
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "G",     # flake8-logging-format
    "T20",   # flake8-print
    "SIM",   # flake8-simplify
    "PL",    # pylint
]
ignore = [
    "SIM117",  # single `with`
    "PLR0913", # too many arguments in function definition
    "PLR0911", # too many return statements
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = false

[tool.mypy]
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
show_error_codes = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
warn_unreachable = true
exclude = [".venv"]
